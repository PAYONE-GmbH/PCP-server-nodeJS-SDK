/**
 * Commerce Platform API
 * RESTful API for the creation of Commerce Cases with Checkouts and the execution of Payments.
 *
 * OpenAPI spec version: 1.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Address } from '../models/Address';
import { CompanyInformation } from '../models/CompanyInformation';
import { ContactDetails } from '../models/ContactDetails';
import { PersonalInformation } from '../models/PersonalInformation';

/**
 * Object containing the details of a customer.
 */
export class Customer {
  'companyInformation'?: CompanyInformation;
  /**
   * Unique identifier for the customer.
   */
  'merchantCustomerId'?: string;
  'billingAddress'?: Address;
  'contactDetails'?: ContactDetails;
  /**
   * Fiscal registration number of the customer or the tax registration number of the company for a business customer. Please find below specifics per country:  * Brazil - Consumer (CPF) with a length of 11 digits  * Brazil - Company (CNPJ) with a length of 14 digits  * Denmark - Consumer (CPR-nummer or personnummer) with a length of 10 digits  * Finland - Consumer (Finnish: henkilötunnus (abbreviated as HETU), Swedish: personbeteckning) with a length of 11 characters  * Norway - Consumer (fødselsnummer) with a length of 11 digits  * Sweden - Consumer (personnummer) with a length of 10 or 12 digits
   */
  'fiscalNumber'?: string;
  /**
   * Business relation to the customer. Possible values:         * B2C - Indicates business to consumer * B2B - Indicates business to business  Mandatory for the the following payment methods: * 3390 - PAYONE Secured Invoice * 3391 - PAYONE Secured Installment * 3392 - PAYONE Secured Direct Debit
   */
  'businessRelation'?: string;
  /**
   * The locale that the customer should be addressed in (for 3rd parties).   Note: Only the language code is supported.
   */
  'locale'?: string;
  'personalInformation'?: PersonalInformation;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: Array<{ name: string; baseName: string; type: string; format: string }> = [
    {
      name: 'companyInformation',
      baseName: 'companyInformation',
      type: 'CompanyInformation',
      format: '',
    },
    {
      name: 'merchantCustomerId',
      baseName: 'merchantCustomerId',
      type: 'string',
      format: '',
    },
    {
      name: 'billingAddress',
      baseName: 'billingAddress',
      type: 'Address',
      format: '',
    },
    {
      name: 'contactDetails',
      baseName: 'contactDetails',
      type: 'ContactDetails',
      format: '',
    },
    {
      name: 'fiscalNumber',
      baseName: 'fiscalNumber',
      type: 'string',
      format: '',
    },
    {
      name: 'businessRelation',
      baseName: 'businessRelation',
      type: 'string',
      format: '',
    },
    {
      name: 'locale',
      baseName: 'locale',
      type: 'string',
      format: '',
    },
    {
      name: 'personalInformation',
      baseName: 'personalInformation',
      type: 'PersonalInformation',
      format: '',
    },
  ];

  static getAttributeTypeMap() {
    return Customer.attributeTypeMap;
  }

  public constructor() {}
}
