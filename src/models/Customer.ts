/**
 * Commerce Platform API
 * RESTful API for the creation of Commerce Cases with Checkouts and the execution of Payments.
 *
 * OpenAPI spec version: 1.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Address } from './Address.js';
import { CompanyInformation } from './CompanyInformation.js';
import { ContactDetails } from './ContactDetails.js';
import { PersonalInformation } from './PersonalInformation.js';

/**
 * Object containing the details of a customer.
 */
export class Customer {
  companyInformation: CompanyInformation | null;
  /**
   * Unique identifier for the customer.
   */
  merchantCustomerId: string | null;
  billingAddress: Address | null;
  contactDetails: ContactDetails | null;
  /**
   * Fiscal registration number of the customer or the tax registration number of the company for a business customer. Please find below specifics per country:  * Brazil - Consumer (CPF) with a length of 11 digits  * Brazil - Company (CNPJ) with a length of 14 digits  * Denmark - Consumer (CPR-nummer or personnummer) with a length of 10 digits  * Finland - Consumer (Finnish: henkilötunnus (abbreviated as HETU), Swedish: personbeteckning) with a length of 11 characters  * Norway - Consumer (fødselsnummer) with a length of 11 digits  * Sweden - Consumer (personnummer) with a length of 10 or 12 digits
   */
  fiscalNumber: string | null;
  /**
   * Business relation to the customer. Possible values:         * B2C - Indicates business to consumer * B2B - Indicates business to business  Mandatory for the the following payment methods: * 3390 - PAYONE Secured Invoice * 3391 - PAYONE Secured Installment * 3392 - PAYONE Secured Direct Debit
   */
  businessRelation: string | null;
  /**
   * The locale that the customer should be addressed in (for 3rd parties).   Note: Only the language code is supported.
   */
  locale: string | null;
  personalInformation: PersonalInformation | null;

  public constructor() {
    this.companyInformation = null;
    this.merchantCustomerId = null;
    this.billingAddress = null;
    this.contactDetails = null;
    this.fiscalNumber = null;
    this.businessRelation = null;
    this.locale = null;
    this.personalInformation = null;
  }
}
