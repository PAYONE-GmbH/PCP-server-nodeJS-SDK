/**
 * Commerce Platform API
 * RESTful API for the creation of Commerce Cases with Checkouts and the execution of Payments.
 *
 * OpenAPI spec version: 1.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { OrderItem } from './OrderItem.js';
import { OrderType } from './OrderType.js';
import { PaymentMethodSpecificInput } from './PaymentMethodSpecificInput.js';
import { References } from './References.js';

/**
 * Request to execute an Order for the corresponding Checkout for a specific payment method. The provided data from the Commerce Case and the Checkout regarding customer, shipping, and ShoppingCart will be automatically loaded and used for the Payment Execution.  In case the paymentMethodSpecificInput has already been provided when creating the Commerce Case or Checkout, this input will automatically be used.  An Order can be created for a full or the partial ShoppingCart of the Checkout. For a partial Order a list of items must be provided. The platform will automatically calculate the respective amount to trigger the payment execution.
 */
export class OrderRequest {
  'orderType'?: OrderType;
  'orderReferences'?: References;
  'items'?: Array<OrderItem>;
  'paymentMethodSpecificInput'?: PaymentMethodSpecificInput;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: Array<{ name: string; baseName: string; type: string; format: string }> = [
    {
      name: 'orderType',
      baseName: 'orderType',
      type: 'OrderType',
      format: '',
    },
    {
      name: 'orderReferences',
      baseName: 'orderReferences',
      type: 'References',
      format: '',
    },
    {
      name: 'items',
      baseName: 'items',
      type: 'Array<OrderItem>',
      format: '',
    },
    {
      name: 'paymentMethodSpecificInput',
      baseName: 'paymentMethodSpecificInput',
      type: 'PaymentMethodSpecificInput',
      format: '',
    },
  ];

  static getAttributeTypeMap() {
    return OrderRequest.attributeTypeMap;
  }

  public constructor() {}
}
