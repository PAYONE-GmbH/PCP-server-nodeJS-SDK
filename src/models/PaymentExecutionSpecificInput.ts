/**
 * Commerce Platform API
 * RESTful API for the creation of Commerce Cases with Checkouts and the execution of Payments.
 *
 * OpenAPI spec version: 1.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AmountOfMoney } from './AmountOfMoney.js';
import { References } from './References.js';
import { ShoppingCartInput } from './ShoppingCartInput.js';

/**
 * The amount of the paymentSpecificInput might differ from the Checkout amount in case of partial payments but cannot be higher. Additionally, the total amount of the provided shopping cart cannot exceed the Checkout amount.  If a different currency is provided than in the Checkout, the payment execution will be declined. Provided details of the customer and shipping from the Checkout will be automatically loaded and used in the Payment Execution request. The ShoppingCart might differ from the one provided in the Checkout (e.g., for partial payments) and might be required by the payment provider (e.g., BNPL). If the ShoppingCart elements differ from the data provided in the Checkout, the existing data will not be overwritten.
 */
export class PaymentExecutionSpecificInput {
  'amountOfMoney'?: AmountOfMoney;
  'shoppingCart'?: ShoppingCartInput;
  'paymentReferences': References;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: Array<{ name: string; baseName: string; type: string; format: string }> = [
    {
      name: 'amountOfMoney',
      baseName: 'amountOfMoney',
      type: 'AmountOfMoney',
      format: '',
    },
    {
      name: 'shoppingCart',
      baseName: 'shoppingCart',
      type: 'ShoppingCartInput',
      format: '',
    },
    {
      name: 'paymentReferences',
      baseName: 'paymentReferences',
      type: 'References',
      format: '',
    },
  ];

  static getAttributeTypeMap() {
    return PaymentExecutionSpecificInput.attributeTypeMap;
  }

  public constructor() {}
}
