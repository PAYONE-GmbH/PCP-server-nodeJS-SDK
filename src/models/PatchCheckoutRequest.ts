/**
 * Commerce Platform API
 * RESTful API for the creation of Commerce Cases with Checkouts and the execution of Payments.
 *
 * OpenAPI spec version: 1.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AmountOfMoney } from './AmountOfMoney.js';
import { CheckoutReferences } from './CheckoutReferences.js';
import { PaymentMethodSpecificInput } from './PaymentMethodSpecificInput.js';
import { References } from './References.js';
import { Shipping } from './Shipping.js';
import { ShoppingCartPatch } from './ShoppingCartPatch.js';

/**
 * An existing shopping cart of a Checkout will not be overwritten with the Patch request. New items can be added to the shoppingCart by providing them in the request. To change existing items (delete, modify or add), the respective itemId must be provided. An item can be completely removed if quantity = 0 is provided.  The price of an item can be changed as long as no payment has happened for this item (i.e. as long as an item has no specific status). Items with a status can no longer be removed entirely, however the quantity can be increased or decreased (for items without payment) by using the itemId.  If no amountOfMoney for the Checkout is provided, the platform will calculate the respective amount based on the cartItem productPrice and productQuantity.
 */
export class PatchCheckoutRequest {
  'amountOfMoney'?: AmountOfMoney;
  'references'?: CheckoutReferences;
  'shipping'?: Shipping;
  'shoppingCart'?: ShoppingCartPatch;
  'paymentMethodSpecificInput'?: PaymentMethodSpecificInput;
  'paymentReferences'?: References;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: Array<{ name: string; baseName: string; type: string; format: string }> = [
    {
      name: 'amountOfMoney',
      baseName: 'amountOfMoney',
      type: 'AmountOfMoney',
      format: '',
    },
    {
      name: 'references',
      baseName: 'references',
      type: 'CheckoutReferences',
      format: '',
    },
    {
      name: 'shipping',
      baseName: 'shipping',
      type: 'Shipping',
      format: '',
    },
    {
      name: 'shoppingCart',
      baseName: 'shoppingCart',
      type: 'ShoppingCartPatch',
      format: '',
    },
    {
      name: 'paymentMethodSpecificInput',
      baseName: 'paymentMethodSpecificInput',
      type: 'PaymentMethodSpecificInput',
      format: '',
    },
    {
      name: 'paymentReferences',
      baseName: 'paymentReferences',
      type: 'References',
      format: '',
    },
  ];

  static getAttributeTypeMap() {
    return PatchCheckoutRequest.attributeTypeMap;
  }

  public constructor() {}
}
